
<div class="intro-y flex items-center mt-8">
    <h2 class="text-lg font-medium mr-auto">Renta Fija</h2>
</div>
<div class="grid grid-cols-12 gap-6 mt-5">
    <div class="intro-y col-span-12 lg:col-span-10">
        <div class="intro-y box">
            <form id="regForm" action="/forms/id-29/renta-fija" method="POST" class="p-5 mr-6">
                <% schemaForm.map(grupo=> { %>
                        <div class="hidden">
                            <div class="p-5 border-b border-gray-200">
                                <h2 class="font-medium text-base mr-auto">
                                    <%= grupo.title %>
                                </h2>
                            </div>
                            <div id="form-validation" class="p-5 mr-6">
                                <div class="preview">
                                    <% grupo.inputs.map(input=> { %>
                                        <div class="form-inline pb-px block md:flex flex-wrap max-w-4xl" >
                                            <label for="<%= input.id %>"
                                                class=" form-label md:w-28 lg:w-44 xl:w-52" style="text-align: left;"><%= input.label %>
                                            </label>
                                            <input id="<%= input.id %>" type="text" name="<%= input.id %>" class="form-control mr-4 "
                                                    placeholder="<%= input.label %>" minlength="2" autocomplete="nope">
                                            <span class="sm:ml-auto sm:flex-grow-0 mt-1 sm:mt-0  text-xs text-gray-600 md:w-20 xl:w-auto invisible">Required, at least 2 characters</span>
                                        </div>
                                        <% })%>
                                </div>
                            </div>
                        </div>                   
                    <% }) %>
                <div class="flex flex-row-reverse">
                    <div class="sm:ml-5 mt-5">
                        <button class="btn btn-primary mr-44 w-20" id="nextBtn" type="button" onclick="nextPrev(1)">Next</button>
                    </div>
                    <div class="sm:ml-5 mt-5">
                        <button class="btn btn-secondary w-20" id="prevBtn" type="button" onclick="nextPrev(-1)">Previous</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    // default
    let currentTab = 0;
    const form = document.querySelector('form');
    const tabs = form.querySelectorAll('.hidden');

    showSection(currentTab);

    function showSection(n) {
        tabs[n].classList.remove('hidden');
        if (n == 0) {
            document.getElementById('prevBtn').classList.add('hidden');
        } else {
            document.getElementById('prevBtn').classList.remove('hidden');
        }
        if (n == (tabs.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
    }
    
    function nextPrev(n) {
        // this function figure out which section to display
        

        //1. Hide the current section
        
        tabs[currentTab].classList.add('hidden');
        //2. Increase o decrease the current section by 1
        currentTab = currentTab + n;
        //3. If we have reached the end of the form

        if (currentTab >= tabs.length) {
            document.getElementById("regForm").submit();
            return false;
        }
        
        showSection(currentTab);

        // scroll in case button next doesnt see it on screen
        if (document.documentElement.scrollTop !== 0) {
            document.querySelector('.intro-y.flex.items-center.mt-8').scrollIntoView()
        }
        if (!isScrolledIntoView(document.getElementById("nextBtn"))) {
            document.querySelector('.intro-y.flex.items-center.mt-8').scrollIntoView()
        }
    }

    // utils

    function isScrolledIntoView(el) {
        var rect = el.getBoundingClientRect();
        var elemTop = rect.top;
        var elemBottom = rect.bottom;

        // Only completely visible elements return true:
        var isVisible = (elemTop >= 0) && (elemBottom <= window.innerHeight);
        // Partially visible elements return true:
        //isVisible = elemTop < window.innerHeight && elemBottom >= 0;
        return isVisible;
    }

    
    
</script>